Organizacja danych:

config.db Aktualne dane konfiguracyjne

config-default.db Konfiguracja domyślna lub inaczej ustawienia fabryczne

live.db - Dane robocze trzymane w pliku tymczasowym  (dane nie są zachowywane pomiędzy resetami)
  Tabele: events, flow
    id         // event id
    itd_id     // input transition detector (e.g photocell) id
    dtm        // date and time of the event
    state      // 1 (0->1) or 0 (1->0)
    flags      // NOT SENT (1), SENT (0) (= aggregated into a flow period)

  Flow table:
    id         // period id
    itd_id     // input transition detector (e.g photocell) id
    dtm        // date and time of the beginning of the period
    cnt        // number of events = number of transitions 0->1
    dark_time  // time the photocell was blocked within this period
    work_time  // time the photocell was working within this period
    test       // photocell test result; the test performed at some time within this period
    flags      // one of: OPEN (2), NOT SENT (1), SENT (0) (we need to distiguish between OPEN periods
               // (ones that are still being modified) and NOT SENT (finished but not yet sent)
               // as we want to send all periods, but also want to resend the OPEN one in the future
               // once it is finished. Also, we don't want to judge if a row is OPEN or not
               // by the current time as all sort of dealys are expected in the system.



archive.db - Dane trwałe trzymane we flashu; zachowywane pomiędzy resetami systemu
  Tabele: flow

Moduły:

icd-itd-kmod              # input transition detector kernel module

icd-itd-daemon            # input transition detector daemon

icd-init-net              # reads config db and configures the network
                          # also saves the current settings into the db
icd-init-livedb           # creates empty database and populates it with
                          # the data from archive db
icd-aggregate-data        # creates and updates flow entries based on events table
icd-archive-data          # copies relevant data from temp db into data db
                          # also removes outdated entries
icd-transfer-data         # transfers data from live db to external server
                          # with custom data exchange protocol based on HTTP POST
icd-test-detector         # Runs a test common for all detectors; the result
                          # of the tests is presented on the program standard output
                          # but is also registered in live db (this can be controlled
                          # by a command line parameter)

icd-init:
  - runs icd-init-livedb
  - runs insmod icd-transition-detector-kmod
  - starts icd-transition-detector-daemon
  - runs icd-init-net 

----

TODO: Support for LCD + buttons
TODO: Web based configuration / data preview tool







+begin-transaction.sql
+commit-transaction.sql
+create-schema-events.sql
+create-schema-flow.sql
+create-schema-config.sql
+attach-live-db.sql
+attach-flow-db.sql
+attach-config-db.sql
+detach-db.sql
+sync-flow.sql
+sync-config.sql
+init-last-aggr-time.sql
+init-default-config.sql
+aggregate.sql
+remove-old-events.sql
+remove-old-flow-entries.slq
+remove-old-events-force.slq
+remove-old-flow-entries-force.sql
+clean-events
+clean-flow
+list-events.sql
+list-flow.sql


create-config-db
  --db=config.db
  begin-transaction.sql
  create-schema-config.sql
  init-default-config.sql
  commit-transaction.sql

create-flow-db
  --db=flow.db
  begin-transaction.sql
  create-schema-flow.sql
  commit-transaction.sql

create-live-db
  --db=live.db
  begin-transaction.sql
  create-schema-events.sql
  create-schema-flow.sql
  create-schema-config.sql
  commit-transaction.sql
  attach-config-db.sql
  begin-transaction.sql
  sync-config.sql
  commit-transaction.sql
  detach-db.sql
  attach-flow-db.sql
  begin-transaction.sql
  sync-flow.sql
  commit-transaction.sql
  detach-flow-db.sql
  init-last-aggr-time.sql

aggregate
  --db=live.db
  begin-transaction.sql
  aggregate.sql
  commit-transaction.sql

save-config
  --db=config.db
  attach-live-db.sql
  begin-transaction.sql
  sync-config.sql
  commit-transaction.sql
  
save-flow
  --db=flow.db
  attach-live-db.sql
  begin-transaction.sql
  sync-flow.sql
  commit-transaction.sql
  
