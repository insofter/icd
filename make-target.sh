#!/bin/sh

print_usage()
{
>&2 cat <<EOF

Usage: ${program_name} [-a|--target-addr TARGET] PACKAGE
  [-h|--help] [-v|--version]

Uploads provided PACKAGE to target device and runs it. The package
is expected to be self-extracting bash script (as generated by
make-package.sh script). The target address can be specified by
-a|--target-addr parameter. If the parameter is not provided then
the ICDTCP3_TARGET_ADDR environment variable is used. If neighter
of them is provided an error is returned.

  -a|--target-addr target device address
  -h|--help        show this information
  -v|--version     show version information

EOF
}

print_version()
{
>&2 cat <<EOF

${program_name} ${version}
Copyright (c) 2011-2012 Tomasz Rozensztrauch

EOF
}

info() 
{
  echo "${program_name}: $1" >&2
}

error() 
{
  echo "${program_name}: Error! $1" >&2
  if [ "$2" != "noexit" ]; then
    exit 1;
  fi
}

program_name=`basename "$0"`
version=`git describe --dirty | sed -e 's/^v\(.*\)$/\1/'`
target_addr="${ICDTCP3_TARGET_ADDR}"

options=`getopt -o a:hv --long target-addr:,help,version -- "$@"`
test $? -eq 0 || error "Parsing parameters failed"
eval set -- "$options"
while true ; do
  case "$1" in
    -a|--target-addr) target_addr="$2"; shift 2 ;;
    -h|--help) print_usage; exit 0 ;;
    -v|--version) print_version; exit 0 ;;
    --) shift; break ;;
    *) error "Parsing parameters failed at '$1'" ;;
  esac
done

test "x$1" != "x" || error "Missing parameter PACKAGE"
package="$1"; shift 1

test "x$1" = "x" || error "Parsing parameters failed at '$1'"

test "x${target_addr}" != "x" || error "Missing target_addr parameter"

info "Uploading package to target device..."
scp "${package}" "admin@${target_addr}:/home/admin"
test $? -eq 0 || error "Uploading package failed"

info "Running remote install command..."
cmd="`basename "${package}"` --prefix=/ --skip-license --exclude-subdir"
ssh "admin@${target_addr}" "sudo /home/admin/${install_cmd}"
test $? -eq 0 || exit "Running remote install command failed"

exit 0

